// Generated by gencs from visualization_msgs/msg/InteractiveMarkerFeedback.idl
// DO NOT EDIT THIS FILE BY HAND!

using System;
using System.Collections;
using System.Collections.Generic;
using ROSBridgeLib;
using UnityEngine;

using ROSBridgeLib.std_msgs.msg;
using ROSBridgeLib.geometry_msgs.msg;

namespace ROSBridgeLib {

    namespace visualization_msgs {
        namespace msg {

            [System.Serializable]
            public class InteractiveMarkerFeedback : ROSMessage
            {
                public std_msgs.msg.Header header;
                public string client_id;
                public string marker_name;
                public string control_name;
                public byte event_type;
                public geometry_msgs.msg.Pose pose;
                public System.UInt32 menu_entry_id;
                public UnityEngine.Vector3 mouse_point;
                public bool mouse_point_valid;

                // Constants:
                public const byte KEEP_ALIVE = 0;
                public const byte POSE_UPDATE = 1;
                public const byte MENU_SELECT = 2;
                public const byte BUTTON_CLICK = 3;
                public const byte MOUSE_DOWN = 4;
                public const byte MOUSE_UP = 5;

                public InteractiveMarkerFeedback()
                {
                    header = new std_msgs.msg.Header();
                    client_id = "";
                    marker_name = "";
                    control_name = "";
                    event_type = 0;
                    pose = new geometry_msgs.msg.Pose();
                    menu_entry_id = 0;
                    mouse_point = new UnityEngine.Vector3();
                    mouse_point_valid = false;
                }

                public InteractiveMarkerFeedback(std_msgs.msg.Header _header, string _client_id, string _marker_name, string _control_name, byte _event_type, geometry_msgs.msg.Pose _pose, System.UInt32 _menu_entry_id, UnityEngine.Vector3 _mouse_point, bool _mouse_point_valid)
                {
                    header = _header;
                    client_id = _client_id;
                    marker_name = _marker_name;
                    control_name = _control_name;
                    event_type = _event_type;
                    pose = _pose;
                    menu_entry_id = _menu_entry_id;
                    mouse_point = _mouse_point;
                    mouse_point_valid = _mouse_point_valid;
                }

                new public static string GetMessageType()
                {
                    return "visualization_msgs/msg/InteractiveMarkerFeedback";
                }

            } // class InteractiveMarkerFeedback

        } // namespace msg
    } // namespace visualization_msgs

} // namespace ROSBridgeLib
