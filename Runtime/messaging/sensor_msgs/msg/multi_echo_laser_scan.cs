// Generated by gencs from sensor_msgs/msg/MultiEchoLaserScan.idl
// DO NOT EDIT THIS FILE BY HAND!

using System;
using System.Collections;
using System.Collections.Generic;
using ROSBridgeLib;
using UnityEngine;

using ROSBridgeLib.std_msgs.msg;
using ROSBridgeLib.sensor_msgs.msg;

namespace ROSBridgeLib {

    namespace sensor_msgs {
        namespace msg {

            [System.Serializable]
            public class MultiEchoLaserScan : ROSMessage
            {
                public std_msgs.msg.Header header;
                public float angle_min;
                public float angle_max;
                public float angle_increment;
                public float time_increment;
                public float scan_time;
                public float range_min;
                public float range_max;
                public System.Collections.Generic.List<sensor_msgs.msg.LaserEcho>  ranges;
                public System.Collections.Generic.List<sensor_msgs.msg.LaserEcho>  intensities;


                public MultiEchoLaserScan()
                {
                    header = new std_msgs.msg.Header();
                    angle_min = 0.0f;
                    angle_max = 0.0f;
                    angle_increment = 0.0f;
                    time_increment = 0.0f;
                    scan_time = 0.0f;
                    range_min = 0.0f;
                    range_max = 0.0f;
                    ranges = new System.Collections.Generic.List<sensor_msgs.msg.LaserEcho>();
                    intensities = new System.Collections.Generic.List<sensor_msgs.msg.LaserEcho>();
                }

                public MultiEchoLaserScan(std_msgs.msg.Header _header, float _angle_min, float _angle_max, float _angle_increment, float _time_increment, float _scan_time, float _range_min, float _range_max, System.Collections.Generic.List<sensor_msgs.msg.LaserEcho>  _ranges, System.Collections.Generic.List<sensor_msgs.msg.LaserEcho>  _intensities)
                {
                    header = _header;
                    angle_min = _angle_min;
                    angle_max = _angle_max;
                    angle_increment = _angle_increment;
                    time_increment = _time_increment;
                    scan_time = _scan_time;
                    range_min = _range_min;
                    range_max = _range_max;
                    ranges = _ranges;
                    intensities = _intensities;
                }

                new public static string GetMessageType()
                {
                    return "sensor_msgs/msg/MultiEchoLaserScan";
                }

            } // class MultiEchoLaserScan

        } // namespace msg
    } // namespace sensor_msgs

} // namespace ROSBridgeLib
