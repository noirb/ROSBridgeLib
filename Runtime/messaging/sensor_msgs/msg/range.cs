// Generated by gencs from sensor_msgs/msg/Range.idl
// DO NOT EDIT THIS FILE BY HAND!

using System;
using System.Collections;
using System.Collections.Generic;
using ROSBridgeLib;
using UnityEngine;

using ROSBridgeLib.std_msgs.msg;

namespace ROSBridgeLib {

    namespace sensor_msgs {
        namespace msg {

            [System.Serializable]
            public class Range : ROSMessage
            {
                public std_msgs.msg.Header header;
                public byte radiation_type;
                public float field_of_view;
                public float min_range;
                public float max_range;
                public float range;

                // Constants:
                public const byte ULTRASOUND = 0;
                public const byte INFRARED = 1;

                public Range()
                {
                    header = new std_msgs.msg.Header();
                    radiation_type = 0;
                    field_of_view = 0.0f;
                    min_range = 0.0f;
                    max_range = 0.0f;
                    range = 0.0f;
                }

                public Range(std_msgs.msg.Header _header, byte _radiation_type, float _field_of_view, float _min_range, float _max_range, float _range)
                {
                    header = _header;
                    radiation_type = _radiation_type;
                    field_of_view = _field_of_view;
                    min_range = _min_range;
                    max_range = _max_range;
                    range = _range;
                }

                new public static string GetMessageType()
                {
                    return "sensor_msgs/msg/Range";
                }

            } // class Range

        } // namespace msg
    } // namespace sensor_msgs

} // namespace ROSBridgeLib
