// Generated by gencs from sensor_msgs/BatteryState.msg
// DO NOT EDIT THIS FILE BY HAND!

using System;
using System.Collections;
using System.Collections.Generic;
using ROSBridgeLib;
using ROSBridgeLib.ROS1;
using UnityEngine;

using ROSBridgeLib.ROS1.std_msgs;

namespace ROSBridgeLib {
 namespace ROS1 {
  namespace sensor_msgs {

    [System.Serializable]
    public class BatteryState : ROSMessage
    {
      public std_msgs.Header header;
      public float voltage;
      public float temperature;
      public float current;
      public float charge;
      public float capacity;
      public float design_capacity;
      public float percentage;
      public byte power_supply_status;
      public byte power_supply_health;
      public byte power_supply_technology;
      public bool present;
      public System.Collections.Generic.List<float>  cell_voltage;
      public System.Collections.Generic.List<float>  cell_temperature;
      public string location;
      public string serial_number;

      public const byte POWER_SUPPLY_STATUS_UNKNOWN = 0;
      public const byte POWER_SUPPLY_STATUS_CHARGING = 1;
      public const byte POWER_SUPPLY_STATUS_DISCHARGING = 2;
      public const byte POWER_SUPPLY_STATUS_NOT_CHARGING = 3;
      public const byte POWER_SUPPLY_STATUS_FULL = 4;
      public const byte POWER_SUPPLY_HEALTH_UNKNOWN = 0;
      public const byte POWER_SUPPLY_HEALTH_GOOD = 1;
      public const byte POWER_SUPPLY_HEALTH_OVERHEAT = 2;
      public const byte POWER_SUPPLY_HEALTH_DEAD = 3;
      public const byte POWER_SUPPLY_HEALTH_OVERVOLTAGE = 4;
      public const byte POWER_SUPPLY_HEALTH_UNSPEC_FAILURE = 5;
      public const byte POWER_SUPPLY_HEALTH_COLD = 6;
      public const byte POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE = 7;
      public const byte POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE = 8;
      public const byte POWER_SUPPLY_TECHNOLOGY_UNKNOWN = 0;
      public const byte POWER_SUPPLY_TECHNOLOGY_NIMH = 1;
      public const byte POWER_SUPPLY_TECHNOLOGY_LION = 2;
      public const byte POWER_SUPPLY_TECHNOLOGY_LIPO = 3;
      public const byte POWER_SUPPLY_TECHNOLOGY_LIFE = 4;
      public const byte POWER_SUPPLY_TECHNOLOGY_NICD = 5;
      public const byte POWER_SUPPLY_TECHNOLOGY_LIMN = 6;

      public BatteryState()
      {
        header = new std_msgs.Header();
        voltage = 0.0f;
        temperature = 0.0f;
        current = 0.0f;
        charge = 0.0f;
        capacity = 0.0f;
        design_capacity = 0.0f;
        percentage = 0.0f;
        power_supply_status = 0;
        power_supply_health = 0;
        power_supply_technology = 0;
        present = false;
        cell_voltage = new System.Collections.Generic.List<float>();
        cell_temperature = new System.Collections.Generic.List<float>();
        location = "";
        serial_number = "";

      }

      public BatteryState(std_msgs.Header _header, float _voltage, float _temperature, float _current, float _charge, float _capacity, float _design_capacity, float _percentage, byte _power_supply_status, byte _power_supply_health, byte _power_supply_technology, bool _present, System.Collections.Generic.List<float>  _cell_voltage, System.Collections.Generic.List<float>  _cell_temperature, string _location, string _serial_number)
      {
        header = _header;
        voltage = _voltage;
        temperature = _temperature;
        current = _current;
        charge = _charge;
        capacity = _capacity;
        design_capacity = _design_capacity;
        percentage = _percentage;
        power_supply_status = _power_supply_status;
        power_supply_health = _power_supply_health;
        power_supply_technology = _power_supply_technology;
        present = _present;
        cell_voltage = _cell_voltage;
        cell_temperature = _cell_temperature;
        location = _location;
        serial_number = _serial_number;
      }

      new public static string GetMessageType()
      {
        return "sensor_msgs/BatteryState";
      }

      new public static string GetMD5Hash()
      {
        return "4ddae7f048e32fda22cac764685e3974";
      }

    } // class BatteryState

  } // namespace sensor_msgs
 } // namespace ROS1
} // namespace ROSBridgeLib
